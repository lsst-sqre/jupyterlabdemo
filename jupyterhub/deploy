#!/bin/bash
K8S_NAMESPACE=""
if [ -n "${1}" ]; then
    K8S_NAMESPACE="${1}"
fi
# Get current context
CC=$(kubectl config current-context)
ccl="cluster: ${CC}"
if [ -z "${K8S_CONTEXT}" ]; then
    K8S_CONTEXT="${CC}"
fi
# Get current namespace
CNM=$(kubectl config view | grep -A1 "${ccl}" | grep namespace | \
	  cut -d ':' -f 2 | cut -d ' ' -f 2)
namecmd=""
changed=1
if [ "${CC}" == "${K8S_CONTEXT}" ]; then
    # already in right context
    if [ -z "${K8S_NAMESPACE}" ] || \
	   [ "${K8S_NAMESPACE}" == "${CNM}" ]; then
	# Also already in right namespace
	changed=0
    fi
fi
cnamespace=0
ccontext=0
if [ ${changed} -ne 0 ]; then
    # Change K8S context
    if [ "${CC}" != "${K8S_CONTEXT}" ]; then
	kubectl config use-context "${K8S_CONTEXT}" || exit 2
	cnamespace=1
	ccontext=0
    fi
    if [ -n "${K8S_NAMESPACE}" ] && \
	   [ "${CNM}" != "${K8S_NAMESPACE}" ]; then
	cnamespace=1
    fi
    if [ ${cnamespace} -ne 0 ]; then
	kubectl config set-context "${K8S_CONTEXT}" \
		--namespace ${K8S_NAMESPACE} || exit 2
    fi
fi
./rebuild_yaml
kubectl delete configmap hub-config
kubectl create configmap hub-config \
	--from-file=kubernetes/config/jupyterhub_config.py \
	--from-file=kubernetes/config/jupyterhub_config.d
kubectl delete configmap jwt-cert
kubectl create configmap jwt-cert \
	--from-file=kubernetes/config/signing-certificate.pem
kubectl delete configmap fs-mounts
kubectl create configmap fs-mounts \
	--from-file=kubernetes/config/mountpoints.json

kubectl delete configmap resourcemap
kubectl create configmap resourcemap \
    --from-file=kubernetes/config/resourcemap.json

kubectl delete deployment hub
kubectl create -f kubernetes/deployment.yml
if [ ${changed} -ne 0 ]; then
    # Restore old context info if needed
    if [ ${ccontext} -ne 0 ]; then
	kubectl config use-context "${CC}" || exit 2
    fi
    # Restore original namespace if needed
    if [ ${cnamespace} ]; then
	kubectl config set-context "${CC}" --namespace "${CNM}" || exit 2
    fi
fi
